// Generated by Dagger (https://dagger.dev).
package com.net.pvr1.api;

import com.net.pvr1.utils.PreferenceManager;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import dagger.internal.QualifierMetadata;
import javax.inject.Provider;

@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AuthInterceptor_MembersInjector implements MembersInjector<AuthInterceptor> {
  private final Provider<PreferenceManager> preferenceManagerProvider;

  public AuthInterceptor_MembersInjector(Provider<PreferenceManager> preferenceManagerProvider) {
    this.preferenceManagerProvider = preferenceManagerProvider;
  }

  public static MembersInjector<AuthInterceptor> create(
      Provider<PreferenceManager> preferenceManagerProvider) {
    return new AuthInterceptor_MembersInjector(preferenceManagerProvider);
  }

  @Override
  public void injectMembers(AuthInterceptor instance) {
    injectPreferenceManager(instance, preferenceManagerProvider.get());
  }

  @InjectedFieldSignature("com.net.pvr1.api.AuthInterceptor.preferenceManager")
  public static void injectPreferenceManager(AuthInterceptor instance,
      PreferenceManager preferenceManager) {
    instance.preferenceManager = preferenceManager;
  }
}
