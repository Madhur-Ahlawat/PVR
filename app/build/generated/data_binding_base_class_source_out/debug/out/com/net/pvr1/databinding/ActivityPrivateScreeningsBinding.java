// Generated by view binder compiler. Do not edit!
package com.net.pvr1.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.CheckBox;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatEditText;
import androidx.appcompat.widget.AppCompatSpinner;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.textfield.TextInputLayout;
import com.net.pvr1.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityPrivateScreeningsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextInputLayout TextInputLayoutEtEmail;

  @NonNull
  public final TextInputLayout TextInputLayoutEtMovie;

  @NonNull
  public final TextInputLayout TextInputLayoutEtName;

  @NonNull
  public final TextInputLayout TextInputLayoutEtNumber;

  @NonNull
  public final TextInputLayout TextInputLayoutEtRequirement;

  @NonNull
  public final CheckBox cbCC;

  @NonNull
  public final AppCompatSpinner cinemaAutoDrop;

  @NonNull
  public final AppCompatEditText dobEt;

  @NonNull
  public final AppCompatEditText etEmail;

  @NonNull
  public final AppCompatEditText etMovie;

  @NonNull
  public final AppCompatEditText etName;

  @NonNull
  public final AppCompatEditText etNumber;

  @NonNull
  public final AppCompatEditText etRequirement;

  @NonNull
  public final AppCompatEditText etSeats;

  @NonNull
  public final ImageView imageView22;

  @NonNull
  public final CommonToolbarBinding include5;

  @NonNull
  public final AppCompatSpinner movieAutoDrop;

  @NonNull
  public final AppCompatSpinner movieType;

  @NonNull
  public final NestedScrollView nestedScrollView;

  @NonNull
  public final TextInputLayout textDate;

  @NonNull
  public final TextInputLayout textInputLayoutCinema;

  @NonNull
  public final TextInputLayout textInputLayoutMovie;

  @NonNull
  public final TextInputLayout textInputLayoutMovieType;

  @NonNull
  public final TextInputLayout textInputLayoutSeat;

  @NonNull
  public final TextView textView29;

  @NonNull
  public final View view23;

  private ActivityPrivateScreeningsBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextInputLayout TextInputLayoutEtEmail,
      @NonNull TextInputLayout TextInputLayoutEtMovie,
      @NonNull TextInputLayout TextInputLayoutEtName,
      @NonNull TextInputLayout TextInputLayoutEtNumber,
      @NonNull TextInputLayout TextInputLayoutEtRequirement, @NonNull CheckBox cbCC,
      @NonNull AppCompatSpinner cinemaAutoDrop, @NonNull AppCompatEditText dobEt,
      @NonNull AppCompatEditText etEmail, @NonNull AppCompatEditText etMovie,
      @NonNull AppCompatEditText etName, @NonNull AppCompatEditText etNumber,
      @NonNull AppCompatEditText etRequirement, @NonNull AppCompatEditText etSeats,
      @NonNull ImageView imageView22, @NonNull CommonToolbarBinding include5,
      @NonNull AppCompatSpinner movieAutoDrop, @NonNull AppCompatSpinner movieType,
      @NonNull NestedScrollView nestedScrollView, @NonNull TextInputLayout textDate,
      @NonNull TextInputLayout textInputLayoutCinema, @NonNull TextInputLayout textInputLayoutMovie,
      @NonNull TextInputLayout textInputLayoutMovieType,
      @NonNull TextInputLayout textInputLayoutSeat, @NonNull TextView textView29,
      @NonNull View view23) {
    this.rootView = rootView;
    this.TextInputLayoutEtEmail = TextInputLayoutEtEmail;
    this.TextInputLayoutEtMovie = TextInputLayoutEtMovie;
    this.TextInputLayoutEtName = TextInputLayoutEtName;
    this.TextInputLayoutEtNumber = TextInputLayoutEtNumber;
    this.TextInputLayoutEtRequirement = TextInputLayoutEtRequirement;
    this.cbCC = cbCC;
    this.cinemaAutoDrop = cinemaAutoDrop;
    this.dobEt = dobEt;
    this.etEmail = etEmail;
    this.etMovie = etMovie;
    this.etName = etName;
    this.etNumber = etNumber;
    this.etRequirement = etRequirement;
    this.etSeats = etSeats;
    this.imageView22 = imageView22;
    this.include5 = include5;
    this.movieAutoDrop = movieAutoDrop;
    this.movieType = movieType;
    this.nestedScrollView = nestedScrollView;
    this.textDate = textDate;
    this.textInputLayoutCinema = textInputLayoutCinema;
    this.textInputLayoutMovie = textInputLayoutMovie;
    this.textInputLayoutMovieType = textInputLayoutMovieType;
    this.textInputLayoutSeat = textInputLayoutSeat;
    this.textView29 = textView29;
    this.view23 = view23;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityPrivateScreeningsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityPrivateScreeningsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_private_screenings, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityPrivateScreeningsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.TextInputLayout_et_email;
      TextInputLayout TextInputLayoutEtEmail = ViewBindings.findChildViewById(rootView, id);
      if (TextInputLayoutEtEmail == null) {
        break missingId;
      }

      id = R.id.TextInputLayout_et_movie;
      TextInputLayout TextInputLayoutEtMovie = ViewBindings.findChildViewById(rootView, id);
      if (TextInputLayoutEtMovie == null) {
        break missingId;
      }

      id = R.id.TextInputLayout_et_name;
      TextInputLayout TextInputLayoutEtName = ViewBindings.findChildViewById(rootView, id);
      if (TextInputLayoutEtName == null) {
        break missingId;
      }

      id = R.id.TextInputLayout_et_number;
      TextInputLayout TextInputLayoutEtNumber = ViewBindings.findChildViewById(rootView, id);
      if (TextInputLayoutEtNumber == null) {
        break missingId;
      }

      id = R.id.TextInputLayout_et_requirement;
      TextInputLayout TextInputLayoutEtRequirement = ViewBindings.findChildViewById(rootView, id);
      if (TextInputLayoutEtRequirement == null) {
        break missingId;
      }

      id = R.id.cbCC;
      CheckBox cbCC = ViewBindings.findChildViewById(rootView, id);
      if (cbCC == null) {
        break missingId;
      }

      id = R.id.cinemaAutoDrop;
      AppCompatSpinner cinemaAutoDrop = ViewBindings.findChildViewById(rootView, id);
      if (cinemaAutoDrop == null) {
        break missingId;
      }

      id = R.id.dob_et;
      AppCompatEditText dobEt = ViewBindings.findChildViewById(rootView, id);
      if (dobEt == null) {
        break missingId;
      }

      id = R.id.et_email;
      AppCompatEditText etEmail = ViewBindings.findChildViewById(rootView, id);
      if (etEmail == null) {
        break missingId;
      }

      id = R.id.et_movie;
      AppCompatEditText etMovie = ViewBindings.findChildViewById(rootView, id);
      if (etMovie == null) {
        break missingId;
      }

      id = R.id.et_name;
      AppCompatEditText etName = ViewBindings.findChildViewById(rootView, id);
      if (etName == null) {
        break missingId;
      }

      id = R.id.et_number;
      AppCompatEditText etNumber = ViewBindings.findChildViewById(rootView, id);
      if (etNumber == null) {
        break missingId;
      }

      id = R.id.et_requirement;
      AppCompatEditText etRequirement = ViewBindings.findChildViewById(rootView, id);
      if (etRequirement == null) {
        break missingId;
      }

      id = R.id.et_seats;
      AppCompatEditText etSeats = ViewBindings.findChildViewById(rootView, id);
      if (etSeats == null) {
        break missingId;
      }

      id = R.id.imageView22;
      ImageView imageView22 = ViewBindings.findChildViewById(rootView, id);
      if (imageView22 == null) {
        break missingId;
      }

      id = R.id.include5;
      View include5 = ViewBindings.findChildViewById(rootView, id);
      if (include5 == null) {
        break missingId;
      }
      CommonToolbarBinding binding_include5 = CommonToolbarBinding.bind(include5);

      id = R.id.movieAutoDrop;
      AppCompatSpinner movieAutoDrop = ViewBindings.findChildViewById(rootView, id);
      if (movieAutoDrop == null) {
        break missingId;
      }

      id = R.id.movieType;
      AppCompatSpinner movieType = ViewBindings.findChildViewById(rootView, id);
      if (movieType == null) {
        break missingId;
      }

      id = R.id.nestedScrollView;
      NestedScrollView nestedScrollView = ViewBindings.findChildViewById(rootView, id);
      if (nestedScrollView == null) {
        break missingId;
      }

      id = R.id.textDate;
      TextInputLayout textDate = ViewBindings.findChildViewById(rootView, id);
      if (textDate == null) {
        break missingId;
      }

      id = R.id.text_input_layout_cinema;
      TextInputLayout textInputLayoutCinema = ViewBindings.findChildViewById(rootView, id);
      if (textInputLayoutCinema == null) {
        break missingId;
      }

      id = R.id.text_input_layout_movie;
      TextInputLayout textInputLayoutMovie = ViewBindings.findChildViewById(rootView, id);
      if (textInputLayoutMovie == null) {
        break missingId;
      }

      id = R.id.text_input_layout_MovieType;
      TextInputLayout textInputLayoutMovieType = ViewBindings.findChildViewById(rootView, id);
      if (textInputLayoutMovieType == null) {
        break missingId;
      }

      id = R.id.text_input_layout_Seat;
      TextInputLayout textInputLayoutSeat = ViewBindings.findChildViewById(rootView, id);
      if (textInputLayoutSeat == null) {
        break missingId;
      }

      id = R.id.textView29;
      TextView textView29 = ViewBindings.findChildViewById(rootView, id);
      if (textView29 == null) {
        break missingId;
      }

      id = R.id.view23;
      View view23 = ViewBindings.findChildViewById(rootView, id);
      if (view23 == null) {
        break missingId;
      }

      return new ActivityPrivateScreeningsBinding((ConstraintLayout) rootView,
          TextInputLayoutEtEmail, TextInputLayoutEtMovie, TextInputLayoutEtName,
          TextInputLayoutEtNumber, TextInputLayoutEtRequirement, cbCC, cinemaAutoDrop, dobEt,
          etEmail, etMovie, etName, etNumber, etRequirement, etSeats, imageView22, binding_include5,
          movieAutoDrop, movieType, nestedScrollView, textDate, textInputLayoutCinema,
          textInputLayoutMovie, textInputLayoutMovieType, textInputLayoutSeat, textView29, view23);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
