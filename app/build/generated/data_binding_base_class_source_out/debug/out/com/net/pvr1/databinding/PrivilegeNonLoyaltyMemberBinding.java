// Generated by view binder compiler. Do not edit!
package com.net.pvr1.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.core.widget.NestedScrollView;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.google.android.material.checkbox.MaterialCheckBox;
import com.net.pvr1.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class PrivilegeNonLoyaltyMemberBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout include15;

  @NonNull
  public final LoyaltyBinding include15Logout;

  @NonNull
  public final ConstraintLayout include16;

  @NonNull
  public final NestedScrollView nestedScrollView2;

  @NonNull
  public final RecyclerView recyclerView35;

  @NonNull
  public final TextView tvEnroll;

  @NonNull
  public final MaterialCheckBox tvTerms1;

  @NonNull
  public final View view172;

  @NonNull
  public final View view173;

  private PrivilegeNonLoyaltyMemberBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout include15, @NonNull LoyaltyBinding include15Logout,
      @NonNull ConstraintLayout include16, @NonNull NestedScrollView nestedScrollView2,
      @NonNull RecyclerView recyclerView35, @NonNull TextView tvEnroll,
      @NonNull MaterialCheckBox tvTerms1, @NonNull View view172, @NonNull View view173) {
    this.rootView = rootView;
    this.include15 = include15;
    this.include15Logout = include15Logout;
    this.include16 = include16;
    this.nestedScrollView2 = nestedScrollView2;
    this.recyclerView35 = recyclerView35;
    this.tvEnroll = tvEnroll;
    this.tvTerms1 = tvTerms1;
    this.view172 = view172;
    this.view173 = view173;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static PrivilegeNonLoyaltyMemberBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static PrivilegeNonLoyaltyMemberBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.privilege_non_loyalty_member, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static PrivilegeNonLoyaltyMemberBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.include15;
      ConstraintLayout include15 = ViewBindings.findChildViewById(rootView, id);
      if (include15 == null) {
        break missingId;
      }

      id = R.id.include15Logout;
      View include15Logout = ViewBindings.findChildViewById(rootView, id);
      if (include15Logout == null) {
        break missingId;
      }
      LoyaltyBinding binding_include15Logout = LoyaltyBinding.bind(include15Logout);

      id = R.id.include16;
      ConstraintLayout include16 = ViewBindings.findChildViewById(rootView, id);
      if (include16 == null) {
        break missingId;
      }

      id = R.id.nestedScrollView2;
      NestedScrollView nestedScrollView2 = ViewBindings.findChildViewById(rootView, id);
      if (nestedScrollView2 == null) {
        break missingId;
      }

      id = R.id.recyclerView35;
      RecyclerView recyclerView35 = ViewBindings.findChildViewById(rootView, id);
      if (recyclerView35 == null) {
        break missingId;
      }

      id = R.id.tvEnroll;
      TextView tvEnroll = ViewBindings.findChildViewById(rootView, id);
      if (tvEnroll == null) {
        break missingId;
      }

      id = R.id.tvTerms1;
      MaterialCheckBox tvTerms1 = ViewBindings.findChildViewById(rootView, id);
      if (tvTerms1 == null) {
        break missingId;
      }

      id = R.id.view172;
      View view172 = ViewBindings.findChildViewById(rootView, id);
      if (view172 == null) {
        break missingId;
      }

      id = R.id.view173;
      View view173 = ViewBindings.findChildViewById(rootView, id);
      if (view173 == null) {
        break missingId;
      }

      return new PrivilegeNonLoyaltyMemberBinding((ConstraintLayout) rootView, include15,
          binding_include15Logout, include16, nestedScrollView2, recyclerView35, tvEnroll, tvTerms1,
          view172, view173);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
