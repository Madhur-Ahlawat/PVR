// Generated by view binder compiler. Do not edit!
package com.net.pvr1.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.net.pvr1.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class SelectCityItemLayoutBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView cityName;

  @NonNull
  public final ConstraintLayout constraintLayout13;

  @NonNull
  public final ImageView imageView36;

  @NonNull
  public final ImageView imageView37;

  @NonNull
  public final ImageView view54;

  private SelectCityItemLayoutBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView cityName, @NonNull ConstraintLayout constraintLayout13,
      @NonNull ImageView imageView36, @NonNull ImageView imageView37, @NonNull ImageView view54) {
    this.rootView = rootView;
    this.cityName = cityName;
    this.constraintLayout13 = constraintLayout13;
    this.imageView36 = imageView36;
    this.imageView37 = imageView37;
    this.view54 = view54;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static SelectCityItemLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static SelectCityItemLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.select_city_item_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static SelectCityItemLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cityName;
      TextView cityName = ViewBindings.findChildViewById(rootView, id);
      if (cityName == null) {
        break missingId;
      }

      ConstraintLayout constraintLayout13 = (ConstraintLayout) rootView;

      id = R.id.imageView36;
      ImageView imageView36 = ViewBindings.findChildViewById(rootView, id);
      if (imageView36 == null) {
        break missingId;
      }

      id = R.id.imageView37;
      ImageView imageView37 = ViewBindings.findChildViewById(rootView, id);
      if (imageView37 == null) {
        break missingId;
      }

      id = R.id.view54;
      ImageView view54 = ViewBindings.findChildViewById(rootView, id);
      if (view54 == null) {
        break missingId;
      }

      return new SelectCityItemLayoutBinding((ConstraintLayout) rootView, cityName,
          constraintLayout13, imageView36, imageView37, view54);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
