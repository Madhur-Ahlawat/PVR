// Generated by view binder compiler. Do not edit!
package com.net.pvr1.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.net.pvr1.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMyBookingBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout giftCard;

  @NonNull
  public final CommonToolbarBinding include2;

  @NonNull
  public final LinearLayout linearLayout;

  @NonNull
  public final RecyclerView recyclerMyBooking;

  @NonNull
  public final TextView textView4;

  @NonNull
  public final TextView textView5;

  @NonNull
  public final ConstraintLayout ticketFood;

  @NonNull
  public final View view14;

  @NonNull
  public final View view15;

  @NonNull
  public final View view16;

  @NonNull
  public final View view17;

  @NonNull
  public final View view18;

  private ActivityMyBookingBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout giftCard, @NonNull CommonToolbarBinding include2,
      @NonNull LinearLayout linearLayout, @NonNull RecyclerView recyclerMyBooking,
      @NonNull TextView textView4, @NonNull TextView textView5,
      @NonNull ConstraintLayout ticketFood, @NonNull View view14, @NonNull View view15,
      @NonNull View view16, @NonNull View view17, @NonNull View view18) {
    this.rootView = rootView;
    this.giftCard = giftCard;
    this.include2 = include2;
    this.linearLayout = linearLayout;
    this.recyclerMyBooking = recyclerMyBooking;
    this.textView4 = textView4;
    this.textView5 = textView5;
    this.ticketFood = ticketFood;
    this.view14 = view14;
    this.view15 = view15;
    this.view16 = view16;
    this.view17 = view17;
    this.view18 = view18;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMyBookingBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMyBookingBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_my_booking, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMyBookingBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.giftCard;
      ConstraintLayout giftCard = ViewBindings.findChildViewById(rootView, id);
      if (giftCard == null) {
        break missingId;
      }

      id = R.id.include2;
      View include2 = ViewBindings.findChildViewById(rootView, id);
      if (include2 == null) {
        break missingId;
      }
      CommonToolbarBinding binding_include2 = CommonToolbarBinding.bind(include2);

      id = R.id.linearLayout;
      LinearLayout linearLayout = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout == null) {
        break missingId;
      }

      id = R.id.recyclerMyBooking;
      RecyclerView recyclerMyBooking = ViewBindings.findChildViewById(rootView, id);
      if (recyclerMyBooking == null) {
        break missingId;
      }

      id = R.id.textView4;
      TextView textView4 = ViewBindings.findChildViewById(rootView, id);
      if (textView4 == null) {
        break missingId;
      }

      id = R.id.textView5;
      TextView textView5 = ViewBindings.findChildViewById(rootView, id);
      if (textView5 == null) {
        break missingId;
      }

      id = R.id.ticketFood;
      ConstraintLayout ticketFood = ViewBindings.findChildViewById(rootView, id);
      if (ticketFood == null) {
        break missingId;
      }

      id = R.id.view14;
      View view14 = ViewBindings.findChildViewById(rootView, id);
      if (view14 == null) {
        break missingId;
      }

      id = R.id.view15;
      View view15 = ViewBindings.findChildViewById(rootView, id);
      if (view15 == null) {
        break missingId;
      }

      id = R.id.view16;
      View view16 = ViewBindings.findChildViewById(rootView, id);
      if (view16 == null) {
        break missingId;
      }

      id = R.id.view17;
      View view17 = ViewBindings.findChildViewById(rootView, id);
      if (view17 == null) {
        break missingId;
      }

      id = R.id.view18;
      View view18 = ViewBindings.findChildViewById(rootView, id);
      if (view18 == null) {
        break missingId;
      }

      return new ActivityMyBookingBinding((ConstraintLayout) rootView, giftCard, binding_include2,
          linearLayout, recyclerMyBooking, textView4, textView5, ticketFood, view14, view15, view16,
          view17, view18);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
