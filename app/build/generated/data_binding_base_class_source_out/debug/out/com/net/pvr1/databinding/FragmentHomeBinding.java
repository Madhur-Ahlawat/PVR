// Generated by view binder compiler. Do not edit!
package com.net.pvr1.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.net.pvr1.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import net.seifhadjhassen.recyclerviewpager.RecyclerViewPager;

public final class FragmentHomeBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView btnQuickBook;

  @NonNull
  public final RecyclerViewPager pagerSlider;

  @NonNull
  public final ConstraintLayout quickBook;

  @NonNull
  public final RecyclerView recyclerViewCategory;

  @NonNull
  public final RecyclerView recyclerViewDetails;

  @NonNull
  public final TextView txtHateToWait;

  @NonNull
  public final View vwMain1s;

  private FragmentHomeBinding(@NonNull ConstraintLayout rootView, @NonNull TextView btnQuickBook,
      @NonNull RecyclerViewPager pagerSlider, @NonNull ConstraintLayout quickBook,
      @NonNull RecyclerView recyclerViewCategory, @NonNull RecyclerView recyclerViewDetails,
      @NonNull TextView txtHateToWait, @NonNull View vwMain1s) {
    this.rootView = rootView;
    this.btnQuickBook = btnQuickBook;
    this.pagerSlider = pagerSlider;
    this.quickBook = quickBook;
    this.recyclerViewCategory = recyclerViewCategory;
    this.recyclerViewDetails = recyclerViewDetails;
    this.txtHateToWait = txtHateToWait;
    this.vwMain1s = vwMain1s;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_home, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentHomeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnQuickBook;
      TextView btnQuickBook = ViewBindings.findChildViewById(rootView, id);
      if (btnQuickBook == null) {
        break missingId;
      }

      id = R.id.pagerSlider;
      RecyclerViewPager pagerSlider = ViewBindings.findChildViewById(rootView, id);
      if (pagerSlider == null) {
        break missingId;
      }

      id = R.id.quickBook;
      ConstraintLayout quickBook = ViewBindings.findChildViewById(rootView, id);
      if (quickBook == null) {
        break missingId;
      }

      id = R.id.recyclerViewCategory;
      RecyclerView recyclerViewCategory = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewCategory == null) {
        break missingId;
      }

      id = R.id.recyclerViewDetails;
      RecyclerView recyclerViewDetails = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewDetails == null) {
        break missingId;
      }

      id = R.id.txtHateToWait;
      TextView txtHateToWait = ViewBindings.findChildViewById(rootView, id);
      if (txtHateToWait == null) {
        break missingId;
      }

      id = R.id.vwMain1s;
      View vwMain1s = ViewBindings.findChildViewById(rootView, id);
      if (vwMain1s == null) {
        break missingId;
      }

      return new FragmentHomeBinding((ConstraintLayout) rootView, btnQuickBook, pagerSlider,
          quickBook, recyclerViewCategory, recyclerViewDetails, txtHateToWait, vwMain1s);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
