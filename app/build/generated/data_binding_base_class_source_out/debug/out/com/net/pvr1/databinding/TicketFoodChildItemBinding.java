// Generated by view binder compiler. Do not edit!
package com.net.pvr1.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.net.pvr1.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class TicketFoodChildItemBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final CardView cardView;

  @NonNull
  public final ConstraintLayout constraintLayout3;

  @NonNull
  public final ImageView imageView3;

  @NonNull
  public final ImageView imageView4;

  @NonNull
  public final LinearLayout linearLayout2;

  @NonNull
  public final ConstraintLayout movieWithFood;

  @NonNull
  public final ConstraintLayout movieWithFoodUi;

  @NonNull
  public final ConstraintLayout onlyFood;

  @NonNull
  public final TextView orderId;

  @NonNull
  public final RecyclerView recyclerFoodChild;

  @NonNull
  public final TextView textView16;

  @NonNull
  public final TextView textView17;

  @NonNull
  public final TextView textView18;

  @NonNull
  public final TextView textView19;

  @NonNull
  public final TextView textView20;

  @NonNull
  public final TextView textView21;

  @NonNull
  public final TextView textView23;

  @NonNull
  public final TextView time;

  private TicketFoodChildItemBinding(@NonNull ConstraintLayout rootView, @NonNull CardView cardView,
      @NonNull ConstraintLayout constraintLayout3, @NonNull ImageView imageView3,
      @NonNull ImageView imageView4, @NonNull LinearLayout linearLayout2,
      @NonNull ConstraintLayout movieWithFood, @NonNull ConstraintLayout movieWithFoodUi,
      @NonNull ConstraintLayout onlyFood, @NonNull TextView orderId,
      @NonNull RecyclerView recyclerFoodChild, @NonNull TextView textView16,
      @NonNull TextView textView17, @NonNull TextView textView18, @NonNull TextView textView19,
      @NonNull TextView textView20, @NonNull TextView textView21, @NonNull TextView textView23,
      @NonNull TextView time) {
    this.rootView = rootView;
    this.cardView = cardView;
    this.constraintLayout3 = constraintLayout3;
    this.imageView3 = imageView3;
    this.imageView4 = imageView4;
    this.linearLayout2 = linearLayout2;
    this.movieWithFood = movieWithFood;
    this.movieWithFoodUi = movieWithFoodUi;
    this.onlyFood = onlyFood;
    this.orderId = orderId;
    this.recyclerFoodChild = recyclerFoodChild;
    this.textView16 = textView16;
    this.textView17 = textView17;
    this.textView18 = textView18;
    this.textView19 = textView19;
    this.textView20 = textView20;
    this.textView21 = textView21;
    this.textView23 = textView23;
    this.time = time;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static TicketFoodChildItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static TicketFoodChildItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.ticket_food_child_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static TicketFoodChildItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cardView;
      CardView cardView = ViewBindings.findChildViewById(rootView, id);
      if (cardView == null) {
        break missingId;
      }

      id = R.id.constraintLayout3;
      ConstraintLayout constraintLayout3 = ViewBindings.findChildViewById(rootView, id);
      if (constraintLayout3 == null) {
        break missingId;
      }

      id = R.id.imageView3;
      ImageView imageView3 = ViewBindings.findChildViewById(rootView, id);
      if (imageView3 == null) {
        break missingId;
      }

      id = R.id.imageView4;
      ImageView imageView4 = ViewBindings.findChildViewById(rootView, id);
      if (imageView4 == null) {
        break missingId;
      }

      id = R.id.linearLayout2;
      LinearLayout linearLayout2 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout2 == null) {
        break missingId;
      }

      id = R.id.movieWithFood;
      ConstraintLayout movieWithFood = ViewBindings.findChildViewById(rootView, id);
      if (movieWithFood == null) {
        break missingId;
      }

      id = R.id.movieWithFoodUi;
      ConstraintLayout movieWithFoodUi = ViewBindings.findChildViewById(rootView, id);
      if (movieWithFoodUi == null) {
        break missingId;
      }

      id = R.id.onlyFood;
      ConstraintLayout onlyFood = ViewBindings.findChildViewById(rootView, id);
      if (onlyFood == null) {
        break missingId;
      }

      id = R.id.orderId;
      TextView orderId = ViewBindings.findChildViewById(rootView, id);
      if (orderId == null) {
        break missingId;
      }

      id = R.id.recyclerFoodChild;
      RecyclerView recyclerFoodChild = ViewBindings.findChildViewById(rootView, id);
      if (recyclerFoodChild == null) {
        break missingId;
      }

      id = R.id.textView16;
      TextView textView16 = ViewBindings.findChildViewById(rootView, id);
      if (textView16 == null) {
        break missingId;
      }

      id = R.id.textView17;
      TextView textView17 = ViewBindings.findChildViewById(rootView, id);
      if (textView17 == null) {
        break missingId;
      }

      id = R.id.textView18;
      TextView textView18 = ViewBindings.findChildViewById(rootView, id);
      if (textView18 == null) {
        break missingId;
      }

      id = R.id.textView19;
      TextView textView19 = ViewBindings.findChildViewById(rootView, id);
      if (textView19 == null) {
        break missingId;
      }

      id = R.id.textView20;
      TextView textView20 = ViewBindings.findChildViewById(rootView, id);
      if (textView20 == null) {
        break missingId;
      }

      id = R.id.textView21;
      TextView textView21 = ViewBindings.findChildViewById(rootView, id);
      if (textView21 == null) {
        break missingId;
      }

      id = R.id.textView23;
      TextView textView23 = ViewBindings.findChildViewById(rootView, id);
      if (textView23 == null) {
        break missingId;
      }

      id = R.id.time;
      TextView time = ViewBindings.findChildViewById(rootView, id);
      if (time == null) {
        break missingId;
      }

      return new TicketFoodChildItemBinding((ConstraintLayout) rootView, cardView,
          constraintLayout3, imageView3, imageView4, linearLayout2, movieWithFood, movieWithFoodUi,
          onlyFood, orderId, recyclerFoodChild, textView16, textView17, textView18, textView19,
          textView20, textView21, textView23, time);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
