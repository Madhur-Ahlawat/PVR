// Generated by view binder compiler. Do not edit!
package com.net.pvr1.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.net.pvr1.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemFoodBottomBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout constraintLayout33;

  @NonNull
  public final ImageView imageView72;

  @NonNull
  public final FoodLayoutAddBinding include10;

  @NonNull
  public final TextView textView144;

  @NonNull
  public final TextView textView145;

  @NonNull
  public final TextView textView146;

  @NonNull
  public final View view97;

  @NonNull
  public final View view98;

  private ItemFoodBottomBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout constraintLayout33, @NonNull ImageView imageView72,
      @NonNull FoodLayoutAddBinding include10, @NonNull TextView textView144,
      @NonNull TextView textView145, @NonNull TextView textView146, @NonNull View view97,
      @NonNull View view98) {
    this.rootView = rootView;
    this.constraintLayout33 = constraintLayout33;
    this.imageView72 = imageView72;
    this.include10 = include10;
    this.textView144 = textView144;
    this.textView145 = textView145;
    this.textView146 = textView146;
    this.view97 = view97;
    this.view98 = view98;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemFoodBottomBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemFoodBottomBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_food_bottom, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemFoodBottomBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.constraintLayout33;
      ConstraintLayout constraintLayout33 = ViewBindings.findChildViewById(rootView, id);
      if (constraintLayout33 == null) {
        break missingId;
      }

      id = R.id.imageView72;
      ImageView imageView72 = ViewBindings.findChildViewById(rootView, id);
      if (imageView72 == null) {
        break missingId;
      }

      id = R.id.include10;
      View include10 = ViewBindings.findChildViewById(rootView, id);
      if (include10 == null) {
        break missingId;
      }
      FoodLayoutAddBinding binding_include10 = FoodLayoutAddBinding.bind(include10);

      id = R.id.textView144;
      TextView textView144 = ViewBindings.findChildViewById(rootView, id);
      if (textView144 == null) {
        break missingId;
      }

      id = R.id.textView145;
      TextView textView145 = ViewBindings.findChildViewById(rootView, id);
      if (textView145 == null) {
        break missingId;
      }

      id = R.id.textView146;
      TextView textView146 = ViewBindings.findChildViewById(rootView, id);
      if (textView146 == null) {
        break missingId;
      }

      id = R.id.view97;
      View view97 = ViewBindings.findChildViewById(rootView, id);
      if (view97 == null) {
        break missingId;
      }

      id = R.id.view98;
      View view98 = ViewBindings.findChildViewById(rootView, id);
      if (view98 == null) {
        break missingId;
      }

      return new ItemFoodBottomBinding((ConstraintLayout) rootView, constraintLayout33, imageView72,
          binding_include10, textView144, textView145, textView146, view97, view98);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
