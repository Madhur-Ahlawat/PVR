// Generated by view binder compiler. Do not edit!
package com.net.pvr1.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.net.pvr1.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FoodBottomDialogBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ConstraintLayout constraintLayout31;

  @NonNull
  public final ImageView imageView71;

  @NonNull
  public final ButtonNextBinding include;

  @NonNull
  public final RecyclerView recyclerView22;

  @NonNull
  public final TextView textView143;

  @NonNull
  public final View view96;

  private FoodBottomDialogBinding(@NonNull ConstraintLayout rootView,
      @NonNull ConstraintLayout constraintLayout31, @NonNull ImageView imageView71,
      @NonNull ButtonNextBinding include, @NonNull RecyclerView recyclerView22,
      @NonNull TextView textView143, @NonNull View view96) {
    this.rootView = rootView;
    this.constraintLayout31 = constraintLayout31;
    this.imageView71 = imageView71;
    this.include = include;
    this.recyclerView22 = recyclerView22;
    this.textView143 = textView143;
    this.view96 = view96;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FoodBottomDialogBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FoodBottomDialogBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.food_bottom_dialog, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FoodBottomDialogBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.constraintLayout31;
      ConstraintLayout constraintLayout31 = ViewBindings.findChildViewById(rootView, id);
      if (constraintLayout31 == null) {
        break missingId;
      }

      id = R.id.imageView71;
      ImageView imageView71 = ViewBindings.findChildViewById(rootView, id);
      if (imageView71 == null) {
        break missingId;
      }

      id = R.id.include;
      View include = ViewBindings.findChildViewById(rootView, id);
      if (include == null) {
        break missingId;
      }
      ButtonNextBinding binding_include = ButtonNextBinding.bind(include);

      id = R.id.recyclerView22;
      RecyclerView recyclerView22 = ViewBindings.findChildViewById(rootView, id);
      if (recyclerView22 == null) {
        break missingId;
      }

      id = R.id.textView143;
      TextView textView143 = ViewBindings.findChildViewById(rootView, id);
      if (textView143 == null) {
        break missingId;
      }

      id = R.id.view96;
      View view96 = ViewBindings.findChildViewById(rootView, id);
      if (view96 == null) {
        break missingId;
      }

      return new FoodBottomDialogBinding((ConstraintLayout) rootView, constraintLayout31,
          imageView71, binding_include, recyclerView22, textView143, view96);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
