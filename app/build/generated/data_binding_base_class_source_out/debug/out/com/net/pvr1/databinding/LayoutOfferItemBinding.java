// Generated by view binder compiler. Do not edit!
package com.net.pvr1.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.net.pvr1.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LayoutOfferItemBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final RelativeLayout item;

  @NonNull
  public final TextView moreDetails;

  @NonNull
  public final ImageView offerImg;

  @NonNull
  public final LinearLayout textDetails;

  @NonNull
  public final TextView tvOfferDetail;

  @NonNull
  public final TextView tvOfferSubTitle;

  @NonNull
  public final TextView tvOfferTitle;

  @NonNull
  public final TextView valid;

  private LayoutOfferItemBinding(@NonNull LinearLayout rootView, @NonNull RelativeLayout item,
      @NonNull TextView moreDetails, @NonNull ImageView offerImg, @NonNull LinearLayout textDetails,
      @NonNull TextView tvOfferDetail, @NonNull TextView tvOfferSubTitle,
      @NonNull TextView tvOfferTitle, @NonNull TextView valid) {
    this.rootView = rootView;
    this.item = item;
    this.moreDetails = moreDetails;
    this.offerImg = offerImg;
    this.textDetails = textDetails;
    this.tvOfferDetail = tvOfferDetail;
    this.tvOfferSubTitle = tvOfferSubTitle;
    this.tvOfferTitle = tvOfferTitle;
    this.valid = valid;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutOfferItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutOfferItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_offer_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutOfferItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.item;
      RelativeLayout item = ViewBindings.findChildViewById(rootView, id);
      if (item == null) {
        break missingId;
      }

      id = R.id.moreDetails;
      TextView moreDetails = ViewBindings.findChildViewById(rootView, id);
      if (moreDetails == null) {
        break missingId;
      }

      id = R.id.offerImg;
      ImageView offerImg = ViewBindings.findChildViewById(rootView, id);
      if (offerImg == null) {
        break missingId;
      }

      id = R.id.textDetails;
      LinearLayout textDetails = ViewBindings.findChildViewById(rootView, id);
      if (textDetails == null) {
        break missingId;
      }

      id = R.id.tvOfferDetail;
      TextView tvOfferDetail = ViewBindings.findChildViewById(rootView, id);
      if (tvOfferDetail == null) {
        break missingId;
      }

      id = R.id.tvOfferSubTitle;
      TextView tvOfferSubTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvOfferSubTitle == null) {
        break missingId;
      }

      id = R.id.tvOfferTitle;
      TextView tvOfferTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvOfferTitle == null) {
        break missingId;
      }

      id = R.id.valid;
      TextView valid = ViewBindings.findChildViewById(rootView, id);
      if (valid == null) {
        break missingId;
      }

      return new LayoutOfferItemBinding((LinearLayout) rootView, item, moreDetails, offerImg,
          textDetails, tvOfferDetail, tvOfferSubTitle, tvOfferTitle, valid);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
