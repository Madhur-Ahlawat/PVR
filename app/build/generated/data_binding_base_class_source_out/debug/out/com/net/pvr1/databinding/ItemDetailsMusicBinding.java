// Generated by view binder compiler. Do not edit!
package com.net.pvr1.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.net.pvr1.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemDetailsMusicBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final CardView cardView5;

  @NonNull
  public final ImageView imageView33;

  @NonNull
  public final ImageView imageView34;

  @NonNull
  public final TextView textView82;

  @NonNull
  public final TextView textView83;

  private ItemDetailsMusicBinding(@NonNull ConstraintLayout rootView, @NonNull CardView cardView5,
      @NonNull ImageView imageView33, @NonNull ImageView imageView34, @NonNull TextView textView82,
      @NonNull TextView textView83) {
    this.rootView = rootView;
    this.cardView5 = cardView5;
    this.imageView33 = imageView33;
    this.imageView34 = imageView34;
    this.textView82 = textView82;
    this.textView83 = textView83;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemDetailsMusicBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemDetailsMusicBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_details_music, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemDetailsMusicBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.cardView5;
      CardView cardView5 = ViewBindings.findChildViewById(rootView, id);
      if (cardView5 == null) {
        break missingId;
      }

      id = R.id.imageView33;
      ImageView imageView33 = ViewBindings.findChildViewById(rootView, id);
      if (imageView33 == null) {
        break missingId;
      }

      id = R.id.imageView34;
      ImageView imageView34 = ViewBindings.findChildViewById(rootView, id);
      if (imageView34 == null) {
        break missingId;
      }

      id = R.id.textView82;
      TextView textView82 = ViewBindings.findChildViewById(rootView, id);
      if (textView82 == null) {
        break missingId;
      }

      id = R.id.textView83;
      TextView textView83 = ViewBindings.findChildViewById(rootView, id);
      if (textView83 == null) {
        break missingId;
      }

      return new ItemDetailsMusicBinding((ConstraintLayout) rootView, cardView5, imageView33,
          imageView34, textView82, textView83);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
